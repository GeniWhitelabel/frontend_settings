# This is a basic workflow to help you get started with Actions

name: CI Laravel-Project Geni

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  app-test:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: test_db
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout
        uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Configure PHP 8.1
        uses: shivammathur/setup-php@master
        with:
          php-version: 8.1
          extensions: mbstring, ctype, pdo_mysql, fileinfo, openssl, bcmath, json, tokenizer, xml

      # Runs a set of commands using the runners shell
      # - name: Copy .env file
      #   run: cp .env.example .env

      - name: Install dependencies with Composer
        run: composer install --prefer-dist

        # - name: Run laravel migration
        #   run: |
        #     php artisan migrate --force
        #     php artisan schema:dump --prune
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports[3306] }}

      - name: Generate laravel app key
        run: php artisan key:generate

      - name: Run Unit and Feature Test using PHPUnit
        env:
          DB_PORT: ${{ job.services.mysql.ports[3306] }}
        run: vendor/bin/phpunit

  creating-docker-image:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    needs: app-test

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # setup QEMU Emulator
      - name: setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to dockerhub
        uses: docker/login-action@v1
        # with:
        #   username: ${{ secrets.DOCKERHUB_USERNAME }}
        #   password: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          username: geniwhitelabel
          password: b54daac4-98b1-445d-bd36-2743d014773a

      - name: get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: geniwhitelabel/edimu-pkl:${{ steps.branch-name.outputs.current_branch }}

  Deploy-to-testing:
    needs: creating-docker-image

    # set github runner
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: set var name
        run: |
          echo "branch=${{ steps.branch-name.outputs.current_branch }}" >> $GITHUB_ENV
      - name: deploy to test domain only if branch on **_web_test
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_KEY }}
          password: ${{ secrets.SSH_PASSPHRASE }}
          port: 22
          script: |
            cd /var/docker/service/${{ env.branch }}
            docker pull geniwhitelabel/edimu-pkl:${{ env.branch }}
            docker compose down
            docker compose up -d
