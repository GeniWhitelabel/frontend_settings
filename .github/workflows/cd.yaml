# This is a basic workflow to help you get started with Actions

name: CD Laravel-Project Geni

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "*"
# A workflow run is made up of one or more jobs that can run sequentially or in parallell
jobs:
  creating-docker-image:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # setup QEMU Emulator
      - name: setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to dockerhub
        uses: docker/login-action@v1
        # with:
        #   username: ${{ secrets.DOCKERHUB_USERNAME }}
        #   password: ${{ secrets.DOCKERHUB_TOKEN }}
        with:
          username: geniwhitelabel
          password: b54daac4-98b1-445d-bd36-2743d014773a

      - name: get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: geniwhitelabel/backend-service:${{ steps.branch-name.outputs.current_branch }}
  # This workflow contains a single job called "build"
  deploy-to-production:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    needs: creating-docker-image

    steps:
      - name: get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.1

      - name: set var name
        run: |
          echo "branch=${{ steps.branch-name.outputs.current_branch }}" >> $GITHUB_ENV
      - name: deploy to test domain only if branch on **_web_production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /var/docker/${{ env.branch }}
            docker pull geniwhitelabel/edimu-pkl:${{ env.branch }}
            docker compose down
            docker compose up -d
